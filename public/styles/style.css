/* navigation bar */

/*menu in the navigation bar
#navbar ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #0C090A;
    border: 1px solid grey;
    border-radius: 4px;
    padding-right: 60px;
}

/*image in the navigation bar
#navbar img {
	padding: 0px;
    margin-top: 5px; 
    margin-bottom: 10px;
    margin-left: 1%;
    height: 45px;
    float: left;
}


/*links in the navigation bar
#navbar a {
    display: block;
    color: floralWhite;
    text-align: center;
    padding: 20px 16px;
    text-decoration: none;	
    height: 60px;
    float:right;
}

#navbar button {
    color: #625D5D;
    text-decoration: none;	
    float: right;
    border-radius: 4px;
}

#navbar li a:hover:not(.active) {
    background-color: #f3f3f3;
    color: #0C090A;
    text-decoration: none;
}

#globe :hover:not(.active){
	background-color: transparent;
    color: transparent;
    text-decoration: none;	
    border: none;
}

#globe :active{
	border: none;
}

#navbar li a.active {
    color: #f3f3f3;
    border: 1px solid grey;
    text-decoration: none;
}
*/

#signedInAs {
	color: floralwhite;
	float: right;
	padding-top:15px;
}

.animated-container {
  padding: 20px;
  border: 5px solid black;
}

.animated-container.ng-hide-add, 
.animated-container.ng-hide-remove {
  transition: all linear 1s;
}
.animated-container.ng-hide-remove,
.animated-container.ng-hide-add.ng-hide-add-active {
  opacity: 0;
}
.animated-container.ng-hide-add,
.animated-container.ng-hide-remove.ng-hide-remove-active {
  opacity: 1;
}

.container {
  overflow: hidden;
}

.sidebar {
  overflow-x:hidden;	
}

.slide-tile {
  float: left;
  transition: all 0.5s ease-in-out;
  width: 300px;
  line-height: 300px;
  text-align: center;
  border: 1px solid black;
  transform: translateX(0);
}
.slide-tile.ng-hide {
  transform: translateX(-100%);
}

/* buttons, inputs */
.menu-toggle-wrapper {
	padding-top:60px;
	padding-left:20px;
	display: block;
	float: left;
}

.menu-toggle {
	height: 30px;
	width: 30px;
}

.menu-toggle-wrapper-sidebar {
	padding-top:120px;
	padding-right:20px;
	display: block;
	float: right;
}

.menu-toggle-sidebar {
	height: 30px;
	width: 30px;
}

.ui-view-wrapper {
	padding-top:60px;
	padding-bottom:60px;
	padding-left:100px;
	padding-right:100px;
}

/* toolbar in home */
.contentdemoBasicUsage div.demo-content {
  height: 450px; }

.contentdemoBasicUsage div[ng-controller] {
  height: 100%;
  padding-bottom: 15px; }

.contentdemoBasicUsage md-content {
  padding: 24px; }
  
/* chips selector in home */
.chipsdemoCustomInputs md-content.autocomplete {
  min-height: 200px; }

.chipsdemoCustomInputs input[type=number] {
  width: 110px; }

.chipsdemoCustomInputs .veggie-option {
  float: left;
  width: 20%;
  box-sizing: border-box;
  padding: 0 8px; }

.chipsdemoCustomInputs .veggie-option .md-item-text {
  padding: 8px;
  background: #f0f0f0;
  border-radius: 3px; }

.chipsdemoCustomInputs .veggie-option .md-item-text h3,
.chipsdemoCustomInputs .veggie-option .md-item-text p {
  padding: 0;
  margin: 0; }

.chipsdemoBasicUsage .errors {
  font-size: 12px;
  color: #dd2c00;
  margin-top: 10px; }

.chipsdemoBasicUsage .custom-chips md-chip {
  position: relative; }
  .chipsdemoBasicUsage .custom-chips md-chip .md-chip-remove-container {
    position: absolute;
    right: 4px;
    top: 4px;
    margin-right: 0;
    height: 24px; }
    .chipsdemoBasicUsage .custom-chips md-chip .md-chip-remove-container button.vegetablechip {
      position: relative;
      height: 24px;
      width: 24px;
      line-height: 30px;
      text-align: center;
      background: rgba(0, 0, 0, 0.3);
      border-radius: 50%;
      border: none;
      box-shadow: none;
      padding: 0;
      margin: 0;
      transition: background 0.15s linear;
      display: block; }
      .chipsdemoBasicUsage .custom-chips md-chip .md-chip-remove-container button.vegetablechip md-icon {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate3d(-50%, -50%, 0) scale(0.7);
        color: white;
        fill: white; }
      .chipsdemoBasicUsage .custom-chips md-chip .md-chip-remove-container button.vegetablechip:hover, .chipsdemoBasicUsage .custom-chips md-chip .md-chip-remove-container button.vegetablechip:focus {
        background: rgba(255, 0, 0, 0.8); }

.chipsdemoBasicUsage .custom-chips md-chips-wrap.md-removable md-chip md-chip-template {
  padding-right: 5px; }

img:focus {
    outline: none;
    border: 0;
 }
 
 
md-card:focus {
    outline: none;
    border: 0;
} 

md-icon:focus {
    outline: none;
    border: 0;
} 

md-content:focus {
    outline: none;
    border: 0;
} 

md-button:focus {
    outline: none;
    border: 0;
} 

md-content:focus {
    outline: none;
    border: 0;
} 
 
.topnavright p:focus {
    outline: none;
    border: 0;
} 

div :focus {
    outline: none;
    border: 0;
} 

/*
Copyright 2016 Google Inc. All Rights Reserved. 
Use of this source code is governed by an MIT-style license that can be foundin the LICENSE file at http://material.angularjs.org/HEAD/license.
*/




/*drag n drop*/
/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.typesDemo ul[dnd-list],
.typesDemo ul[dnd-list] > li {
  position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.typesDemo ul[dnd-list] {
  min-height: 42px;
  padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.typesDemo ul[dnd-list] .dndDraggingSource {
  display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.typesDemo ul[dnd-list] .dndPlaceholder {
  display: block;
  background-color: #ddd;
  padding: 10px 15px;
  min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.typesDemo ul[dnd-list] li {
  background-color: #fff;
  border: 1px solid #ddd;
  border-top-right-radius: 4px;
  border-top-left-radius: 4px;
  display: block;
  margin-bottom: -1px;

  /* Disable text selection if item is not draggable */
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.typesDemo ul[dnd-list] li dnd-nodrag {
  display: block;
  padding: 10px 15px;
}

/**
 * Gender-specifc background
 */
.typesDemo ul[dnd-list] li.background-man {
  background-color: #CAE0FC;
}

.typesDemo ul[dnd-list] li.background-woman {
  background-color: #FFE2F5;
}

.typesDemo ul[dnd-list] input.background-man {
  background-color: #D8E9FF;
  color: #2F4D99;
}

.typesDemo ul[dnd-list] input.background-woman {
  background-color: #FFF0FA;
  color: #D84FA7;
}

/**
 * Handle positioning
 */
.typesDemo .handle {
  cursor: move;
  position: absolute;
  top: 14px;
}

.typesDemo .name {
  margin-left: 20px;
}